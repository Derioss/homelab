---
- name: Create cloud init template
  become: true
  block:
    - name: Check if template already exists
      ansible.builtin.shell: qm list | grep "{{ vm_id }}"
      ignore_errors: true
      register: template_exists_cmd

    - name: Delete template {{ vm_id }} if it already exists
      ansible.builtin.command: qm destroy {{ vm_id }}
      when: template_exists_cmd.rc == 0

    - name: Create the VM to be used as a cloud-init base for template {{ vm_instance_template_name }}
      ansible.builtin.command: qm create {{ vm_id }} -name {{ vm_instance_template_name }} -memory 1024 -net0 virtio,bridge={{ bridge }} -cores 1 -sockets 1

    - name: Import the cloud init ISO image into the disk
      ansible.builtin.command: qm importdisk {{ vm_id }} {{ iso_image_path }} {{ storage }}

    - name: Attach the disk to the virtual machine
      ansible.builtin.command: qm set {{ vm_id }} -scsihw virtio-scsi-pci -virtio0 "{{ storage }}:vm-{{ vm_id }}-disk-0"

    - name: Set a second drive of the cloud-init type
      ansible.builtin.command: qm set {{ vm_id }} -ide2 "{{ storage }}:cloudinit"

    - name: Add serial output
      ansible.builtin.command: qm set {{ vm_id }} -serial0 socket -vga serial0

    - name: Set the bootdisk to their imported disk
      ansible.builtin.command: qm set {{ vm_id }} -boot c -bootdisk virtio0

    - name: Enable qemu guest agent
      ansible.builtin.command: qm set {{ vm_id }} --agent enabled=1
      when: enable_qemu_guest_agent is defined

    - name: Create a template from the instance
      ansible.builtin.command: qm template {{ vm_id }}
